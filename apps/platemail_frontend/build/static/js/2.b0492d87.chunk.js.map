{"version":3,"sources":["components/hello/Hello.tsx","components/hello/HelloContainer.tsx"],"names":["hello_Hello","_a","name","_b","enthusiasmLevel","onIncrement","onDecrement","Error","preact_compat_es","className","Array","join","onClick","mapStateToProps","mapDispatchToProps","dispatch","Object","enthusiasm","__webpack_exports__","es"],"mappings":"8IAiCA,IAAAA,EAvBA,SAAeC,OACbC,EAAAD,EAAAC,KACAC,EAAAF,EAAAG,uBAAA,IAAAD,EAAA,EAAAA,EACAE,EAAAJ,EAAAI,YACAC,EAAAL,EAAAK,YAEA,GAAIF,GAAmB,EACrB,MAAM,IAAIG,MAAM,+CAGlB,OACEC,EAAA,qBAAKC,UAAU,SACbD,EAAA,oBAAIC,UAAU,wBACPP,EAaJQ,MAb+BN,EAad,GAAGO,KAAK,MAX5BH,EAAA,yBACEA,EAAA,wBAAQI,QAASN,GAAW,KAC5BE,EAAA,wBAAQI,QAASP,GAAW,oBCjB9B,SAAUQ,EAAgBZ,GAC9B,OACEG,gBAF8BH,EAAAG,gBAG9BF,KAH+CD,EAAAC,MAO7C,SAAUY,EAAmBC,GACjC,OACET,YAAa,WAAM,OAAAS,EAASC,OAAAC,EAAA,EAAAD,KAC5BX,YAAa,WAAM,OAAAU,EAASC,OAAAC,EAAA,EAAAD,qGAIhCE,EAAA,QAAeF,OAAAG,EAAA,EAAAH,CACbH,EACAC,EAFF,CAGEd","file":"static/js/2.b0492d87.chunk.js","sourcesContent":["import * as React from \"react\";\nimport \"./Hello.scss\";\n\nexport interface IProps {\n  name: string;\n  enthusiasmLevel?: number;\n  onIncrement?: () => void;\n  onDecrement?: () => void;\n}\n\nfunction Hello({\n  name,\n  enthusiasmLevel = 1,\n  onIncrement,\n  onDecrement\n}: IProps) {\n  if (enthusiasmLevel <= 0) {\n    throw new Error(\"You could be a little more enthusiastic. :D\");\n  }\n\n  return (\n    <div className=\"hello\">\n      <h2 className=\"greeting hero\">\n        Hey {name + getExclamationMarks(enthusiasmLevel)}\n      </h2>\n      <div>\n        <button onClick={onDecrement}>-</button>\n        <button onClick={onIncrement}>+</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Hello;\n\nfunction getExclamationMarks(numChars: number) {\n  return Array(numChars + 1).join(\"!\");\n}\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport Hello from \"./Hello\";\n\nimport {\n  decrementEnthusiasm,\n  IExampleStoreState,\n  incrementEnthusiasm\n} from \"../../data/enthusiasm\";\n\nexport function mapStateToProps({ enthusiasmLevel, name }: IExampleStoreState) {\n  return {\n    enthusiasmLevel,\n    name\n  };\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    onDecrement: () => dispatch(decrementEnthusiasm()),\n    onIncrement: () => dispatch(incrementEnthusiasm())\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Hello);\n"],"sourceRoot":""}